apiVersion: apps/v1
kind: Deployment
metadata:
  name: k6
spec:
  replicas: 1
  selector:
    matchLabels:
      app: k6
  template:
    metadata:
      labels:
        app: k6
    spec:
      containers:
        - name: k6
          image: grafana/k6:latest
          args:
            - run
            - /scripts/test.js
          volumeMounts:
            - name: k6-scripts
              mountPath: /scripts
      volumes:
        - name: k6-scripts
          configMap:
            name: k6-scripts
---
apiVersion: v1
kind: ConfigMap
metadata:
  name: k6-scripts
data:
  test.js: |
    import http from 'k6/http';
    import { sleep } from 'k6';
    export const options = {
        stages: [
            { duration: '30s', target: 20 },
            { duration: '1m', target: 20 },
            { duration: '30s', target: 50 },
            { duration: '1m', target: 50 },
            { duration: '30s', target: 0 },
        ],
        thresholds: {
            http_req_duration: ['p(95)<500'],
        },
    };
    export default function () {
        const response = http.get('http://php-apache');
        if (response.status !== 200) {
            console.log(`Falha na requisição: ${response.status}`);
        }
        sleep(Math.random() * 1 + 1);
    }
